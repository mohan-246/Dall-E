/* eslint-disable react/prop-types */
import { useState, useEffect } from "react";
import { Loader, Card, FormField } from "../components";

const RenderCards = ({ data, title }) => {
  if (data?.length > 0) {
    return data.map((post) => <Card key={post._id} {...post} />);
  }
  return (
    <h2
      className="mt-5 font-bold text-[#6449ff] text-xl upp
        "
    >
      {title}
    </h2>
  );
};

const Home = () => {
  const [loading, setloading] = useState(false);
  const [allPosts, setallposts] = useState(null);
  const [searchtext, setsearchtext] = useState("");
  const [searchedresults,setsearchedresults] = useState(null);
  const [searchtimeout,setsearctimeout]=useState(null);

  useEffect(() => {
    const fetchPosts = async () => {
      setloading(true);
      try {
        const response = await fetch("https://dall-e-azsy.onrender.com/api/v1/post", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });
        if (response.ok) {
          const result = await response.json();
          setallposts(result.data.reverse());
        }
      } catch (e) {
        alert(e);
      } finally {
        setloading(false);
      }
    };
    fetchPosts();
  }, []);

  const handleSearchChange=(e) =>{
    clearTimeout(searchtimeout);
    setsearchtext(e.target.value);

    setsearctimeout(

    setTimeout(()=> {
      const searchResults=allPosts.filter((item)=> item.name.toLowerCase().includes(searchtext.toLowerCase()) || item.prompt.toLowerCase().includes(searchtext.toLowerCase()))
      setsearchedresults(searchResults);
    },500)
    );
    
  }

  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text=[#222328] text-[32px]">
          The Community Showcase
        </h1>
        <p className="mt-2 text=[#666e75] text-[16px] max-w[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by Dall-E AI
        </p>
      </div>
      <div className="mt-16">
        <FormField 
          LabelName="Search posts"
          type="text"
          name="text"
          placeholder="search posts"
          value={searchtext}
          handleChange={handleSearchChange}
        />
      </div>
      <div className="mt-10">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchtext && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing results for{" "}
                <span className="text-[#222328]">{searchtext}</span>
              </h2>
            )}
            <div className="grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchtext ? (
                <RenderCards data={searchedresults} title="Not search results found" />
              ) : (
                <RenderCards data={allPosts} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  );
};

export default Home;